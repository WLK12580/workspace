from window_class import class_window as window
from data_api import nc_data as data


class SystemDataWindow(window.WindowTable):
    def __init__(self):
        super().__init__()

    def init_table(self):
        self.add_item(data.task_mode)
        self.add_item(data.current_coordinate)
        self.add_item(data.G95x_Code)
        self.add_item(data.G_Code)
        self.add_item(data.G21x_Code)

        self.add_item(data.joints_count)
        self.add_item(data.ipcts_coordinate_x)
        self.add_item(data.ipcts_coordinate_y)
        self.add_item(data.ipcts_coordinate_z)
        self.add_item(data.ipcts_coordinate_a)
        self.add_item(data.ipcts_coordinate_b)
        self.add_item(data.ipcts_coordinate_c)
        self.add_item(data.ipcts_coordinate_u)
        self.add_item(data.ipcts_coordinate_v)
        self.add_item(data.ipcts_coordinate_w)
        self.add_item(data.spindle_count)
        self.add_item(data.linear_unit)
        self.add_item(data.angular_unit)
        self.add_item(data.default_linear_velocity)
        self.add_item(data.default_linear_acceleration)
        self.add_item(data.max_linear_velocity)
        self.add_item(data.max_linear_acceleration)
        self.add_item(data.no_force_homing)
        self.add_item(data.no_probe_jog_error)
        self.add_item(data.no_probe_home_error)
        self.add_item(data.arc_blend_enable)
        self.add_item(data.arc_blend_fallback_enable)
        self.add_item(data.arc_blend_optimization_depth)
        self.add_item(data.arc_blend_gap_cycles)
        self.add_item(data.arc_blend_ramp_freq)
        self.add_item(data.rs274_ngc_orient_offset)
        self.add_item(data.rs274_ngc_center_arc_radius_tolerance_inch)
        self.add_item(data.rs274_ngc_center_arc_radius_tolerance_mm)
        self.add_item(data.rs274_ngc_retain_G43)
        self.add_item(data.rs274_ngc_oword_nargs)
        self.add_item(data.rs274_ngc_oword_warnonly)
        self.add_item(data.rs274_ngc_disable_G92_persistence)
        self.add_item(data.emcmot_base_period)
        self.add_item(data.emcmot_servo_period)
        self.add_item(data.traj_period)
        self.add_item(data.emcmot_comm_timeout)
        self.add_item(data.task_cycle_time)
        self.add_item(data.emcio_cycle_time)
        self.add_item(data.emcio_tool_change_position)
        self.add_item(data.emcio_tool_change_quill_up)
        self.add_item(data.rs274_ngc_startup_code)

        self.add_item(data.program_name)
        self.add_item(data.program_line)
        self.add_item(data.program_call_level)
        self.add_item(data.rcs_state)

        self.add_item(data.toolChange_insertionPos_x1)
        self.add_item(data.toolChange_insertionPos_x2)
        self.add_item(data.toolChange_insertionPos_y)
        self.add_item(data.toolChange_insertionPos_z)
        self.add_item(data.toolChange_outPos_x1)
        self.add_item(data.toolChange_outPos_x2)
        self.add_item(data.toolChange_outPos_y)
        self.add_item(data.toolChange_outPos_z)
        self.add_item(data.toolChange_safePos_x1)
        self.add_item(data.toolChange_safePos_x2)
        self.add_item(data.toolChange_safePos_y)
        self.add_item(data.toolChange_safePos_z)
        self.add_item(data.toolChange_spindleAngle_1)
        self.add_item(data.toolChange_spindleAngle_2)
        self.add_item(data.tool_pocMax_1)
        self.add_item(data.tool_pocMax_2)
        for i in range(1, 24):
            self.add_item(data.tool_pos_index[i - 1])
        self.add_item(data.toolChange_waitingPos_X1)
        self.add_item(data.toolChange_waitingPos_X2)
        self.add_item(data.toolChange_waitingPos_Y)
        self.add_item(data.toolChange_waitingPos_Z)
        # 龙门同步参数
        self.add_item(data.gantry_syn_p)
        self.add_item(data.gantry_syn_i)
        self.add_item(data.gantry_syn_d)
        self.add_item(data.gantry_syn_ff0)
        self.add_item(data.gantry_syn_ff1)
        self.add_item(data.gantry_syn_ff2)
        self.add_item(data.gantry_syn_bias)
        self.add_item(data.gantry_syn_deadband)
        self.add_item(data.gantry_syn_max_output)
        self.add_item(data.gantry_syn_p_y1)
        self.add_item(data.gantry_syn_p_y2)
        self.add_item(data.gantry_syn_frac_th1)
        self.add_item(data.gantry_syn_frac_th2)

        self.add_item(data.scope_sample_points_nums)
        self.add_item(data.scope_sample_frequency)
        self.add_item(data.scope_sample_channel_nums)
